//
// Given two strings s and t which consist of only lowercase letters.
//
// String t is generated by random shuffling string s and then add one more letter at a random position.
//
// Find the letter that was added in t.
//
// Example:
//
// Input:
// s = "abcd"
// t = "abcde"
//
// Output:
// e
//
// Explanation:
// 'e' is the letter that was added.
// " />
//
//     <meta name="keywords" content="LeetCode, 领扣, 领扣网, 领扣网络, 领扣中国, lingkou, LC, LCCN, LeetCode中国, LeetCode官网, 刷题, 在线编程, LeetCode题库, 面经, 算法, 面试, 面试题, 机器学习, 大数据, 代码, 汇编, 编程, 开发, 程序员, 工程师, 码农, 程序猿, BAT, BAT面试, OJ, online judge, coding , interview, 技术面试, LeetCode中文版, leetcodechina


class Solution {
public:
    char findTheDifference(string s, string t) {
        //因为被重排，如果你再重排，就有点无赖了。
        //直接考虑哈希表，st两者遍历一次即可,最后遍历一次map，显然是O1
        unordered_map<char,int> col;
        for(int i=0;i<s.size();++i){
            col[s[i]]++;
        }
        for(int i=0;i<t.size();++i){
            col[t[i]]--;
        }
        for(auto iter=col.begin();iter!=col.end();++iter)
            if(iter->second==-1)
                return iter->first;
        static char c=' ';
        return c;
        
        
    }
};
